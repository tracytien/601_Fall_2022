{
  "hash": "08ef21859161ab04985f8eb9af3f9958",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Tracy Tien\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"12/01/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Read in the data\nanimal_weight <- read_csv(\"_data/animal_weight.csv\")\nanimal_weight\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 17\n  IPCC A…¹ Cattl…² Cattl…³ Buffa…⁴ Swine…⁵ Swine…⁶ Chick…⁷ Chick…⁸ Ducks Turkeys\n  <chr>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>\n1 Indian …     275     110     295      28      28     0.9     1.8   2.7     6.8\n2 Eastern…     550     391     380      50     180     0.9     1.8   2.7     6.8\n3 Africa       275     173     380      28      28     0.9     1.8   2.7     6.8\n4 Oceania      500     330     380      45     180     0.9     1.8   2.7     6.8\n5 Western…     600     420     380      50     198     0.9     1.8   2.7     6.8\n6 Latin A…     400     305     380      28      28     0.9     1.8   2.7     6.8\n7 Asia         350     391     380      50     180     0.9     1.8   2.7     6.8\n8 Middle …     275     173     380      28      28     0.9     1.8   2.7     6.8\n9 Norther…     604     389     380      46     198     0.9     1.8   2.7     6.8\n# … with 7 more variables: Sheep <dbl>, Goats <dbl>, Horses <dbl>, Asses <dbl>,\n#   Mules <dbl>, Camels <dbl>, Llamas <dbl>, and abbreviated variable names\n#   ¹​`IPCC Area`, ²​`Cattle - dairy`, ³​`Cattle - non-dairy`, ⁴​Buffaloes,\n#   ⁵​`Swine - market`, ⁶​`Swine - breeding`, ⁷​`Chicken - Broilers`,\n#   ⁸​`Chicken - Layers`\n```\n:::\n\n```{.r .cell-code}\nspec(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncols(\n  `IPCC Area` = col_character(),\n  `Cattle - dairy` = col_double(),\n  `Cattle - non-dairy` = col_double(),\n  Buffaloes = col_double(),\n  `Swine - market` = col_double(),\n  `Swine - breeding` = col_double(),\n  `Chicken - Broilers` = col_double(),\n  `Chicken - Layers` = col_double(),\n  Ducks = col_double(),\n  Turkeys = col_double(),\n  Sheep = col_double(),\n  Goats = col_double(),\n  Horses = col_double(),\n  Asses = col_double(),\n  Mules = col_double(),\n  Camels = col_double(),\n  Llamas = col_double()\n)\n```\n:::\n\n```{.r .cell-code}\n#Load packages\nlibrary(tidyverse)\n#install.packages(\"psych\")\nlibrary(psych)\n\ndescribe(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   vars n   mean     sd median trimmed    mad   min   max range\nIPCC Area*            1 9   5.00   2.74    5.0    5.00   2.97   1.0   9.0   8.0\nCattle - dairy        2 9 425.44 140.39  400.0  425.44 185.32 275.0 604.0 329.0\nCattle - non-dairy    3 9 298.00 116.26  330.0  298.00  90.44 110.0 420.0 310.0\nBuffaloes             4 9 370.56  28.33  380.0  370.56   0.00 295.0 380.0  85.0\nSwine - market        5 9  39.22  10.79   45.0   39.22   7.41  28.0  50.0  22.0\nSwine - breeding      6 9 116.44  84.19  180.0  116.44  26.69  28.0 198.0 170.0\nChicken - Broilers    7 9   0.90   0.00    0.9    0.90   0.00   0.9   0.9   0.0\nChicken - Layers      8 9   1.80   0.00    1.8    1.80   0.00   1.8   1.8   0.0\nDucks                 9 9   2.70   0.00    2.7    2.70   0.00   2.7   2.7   0.0\nTurkeys              10 9   6.80   0.00    6.8    6.80   0.00   6.8   6.8   0.0\nSheep                11 9  39.39  10.80   48.5   39.39   0.00  28.0  48.5  20.5\nGoats                12 9  34.72   4.48   38.5   34.72   0.00  30.0  38.5   8.5\nHorses               13 9 315.22  73.26  377.0  315.22   0.00 238.0 377.0 139.0\nAsses                14 9 130.00   0.00  130.0  130.00   0.00 130.0 130.0   0.0\nMules                15 9 130.00   0.00  130.0  130.00   0.00 130.0 130.0   0.0\nCamels               16 9 217.00   0.00  217.0  217.00   0.00 217.0 217.0   0.0\nLlamas               17 9 217.00   0.00  217.0  217.00   0.00 217.0 217.0   0.0\n                    skew kurtosis    se\nIPCC Area*          0.00    -1.60  0.91\nCattle - dairy      0.11    -1.92 46.80\nCattle - non-dairy -0.45    -1.68 38.75\nBuffaloes          -2.07     2.63  9.44\nSwine - market     -0.12    -2.12  3.60\nSwine - breeding   -0.17    -2.15 28.06\nChicken - Broilers  -Inf      NaN  0.00\nChicken - Layers    -Inf      NaN  0.00\nDucks                Inf      NaN  0.00\nTurkeys              Inf      NaN  0.00\nSheep              -0.19    -2.17  3.60\nGoats              -0.19    -2.17  1.49\nHorses             -0.19    -2.17 24.42\nAsses                NaN      NaN  0.00\nMules                NaN      NaN  0.00\nCamels               NaN      NaN  0.00\nLlamas               NaN      NaN  0.00\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe `animal_weight` dataset contains 16 types (including subtypes, such as dairy cattle vs. non-dairy cattle) of livestock weight information for 9 IPCC (Intergovernmental Panel on Climate Change) areas. \n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Example: find current and future data dimensions\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA     682.   1163. \n2 USA      1990 NAFTA    1183.    674. \n3 France   1980 EU       1127.    608. \n4 Mexico   1990 NAFTA    1634.   1238. \n5 USA      1980 NAFTA    1642.    459. \n6 France   1990 EU       1156.    -13.5\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n### Challenge: Describe the final dimensions\n\nThe current dimensions of `animal_weight` are 9 rows of IPCC Areas, and 17 columns (types of livestock). 9*(17-1)=144 rows, and we will want each row to have the IPCC region, type of livestock, and the weight. This means there should be 3 columns. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Existing rows/cases\nnrow(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n\n```{.r .cell-code}\n#Existing columns/cases\nncol(animal_weight) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n\n```{.r .cell-code}\n#Expected rows/cases\nnrow(animal_weight) * (ncol(animal_weight)-1) #subtract first column IPCC Area\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144\n```\n:::\n:::\n\n\nAny additional comments?\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing              682. \n 2 Mexico   1980 NAFTA incoming             1163. \n 3 USA      1990 NAFTA outgoing             1183. \n 4 USA      1990 NAFTA incoming              674. \n 5 France   1980 EU    outgoing             1127. \n 6 France   1980 EU    incoming              608. \n 7 Mexico   1990 NAFTA outgoing             1634. \n 8 Mexico   1990 NAFTA incoming             1238. \n 9 USA      1980 NAFTA outgoing             1642. \n10 USA      1980 NAFTA incoming              459. \n11 France   1990 EU    outgoing             1156. \n12 France   1990 EU    incoming              -13.5\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\nUsing `pivot_longer` to transform the data where each row represents a livestock type with its weight within an IPCC region.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanimal_weight_pivot_longer <- pivot_longer(animal_weight,\n                                           cols = -`IPCC Area`, #the - means except for this column?\n                                           names_to = \"livestock type\",\n                                           values_to = \"weight\")\nanimal_weight_pivot_longer\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 144 × 3\n   `IPCC Area`         `livestock type`   weight\n   <chr>               <chr>               <dbl>\n 1 Indian Subcontinent Cattle - dairy      275  \n 2 Indian Subcontinent Cattle - non-dairy  110  \n 3 Indian Subcontinent Buffaloes           295  \n 4 Indian Subcontinent Swine - market       28  \n 5 Indian Subcontinent Swine - breeding     28  \n 6 Indian Subcontinent Chicken - Broilers    0.9\n 7 Indian Subcontinent Chicken - Layers      1.8\n 8 Indian Subcontinent Ducks                 2.7\n 9 Indian Subcontinent Turkeys               6.8\n10 Indian Subcontinent Sheep                28  \n# … with 134 more rows\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}